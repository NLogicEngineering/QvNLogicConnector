//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QvNLogicConnector.NLogic {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportRequest", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class ReportRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private QvNLogicConnector.NLogic.Audience[] AudiencesField;
        
        private QvNLogicConnector.NLogic.DateRange[] DateRangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.DaypartArguments DaypartArgumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.Daypart[] DaypartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeAudienceOverlapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludePrimaryAudienceOverlapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.VehicleFieldType[] GroupByFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LCIDField;
        
        private int[] MarketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.PlanningArguments PlanningArgumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.ProgramArguments ProgramArgumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.StatType[] RequestedCumulativeStatsField;
        
        private QvNLogicConnector.NLogic.StatType[] RequestedStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.SharePercentArguments SharePercentArgumentsField;
        
        private int[] StationsField;
        
        private QvNLogicConnector.NLogic.ReportType TypeField;
        
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.Audience[] Audiences {
            get {
                return this.AudiencesField;
            }
            set {
                if ((object.ReferenceEquals(this.AudiencesField, value) != true)) {
                    this.AudiencesField = value;
                    this.RaisePropertyChanged("Audiences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.DateRange[] DateRanges {
            get {
                return this.DateRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.DateRangesField, value) != true)) {
                    this.DateRangesField = value;
                    this.RaisePropertyChanged("DateRanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.DaypartArguments DaypartArguments {
            get {
                return this.DaypartArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DaypartArgumentsField, value) != true)) {
                    this.DaypartArgumentsField = value;
                    this.RaisePropertyChanged("DaypartArguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.Daypart[] Dayparts {
            get {
                return this.DaypartsField;
            }
            set {
                if ((object.ReferenceEquals(this.DaypartsField, value) != true)) {
                    this.DaypartsField = value;
                    this.RaisePropertyChanged("Dayparts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool ExcludeAudienceOverlaps {
            get {
                return this.ExcludeAudienceOverlapsField;
            }
            set {
                if ((this.ExcludeAudienceOverlapsField.Equals(value) != true)) {
                    this.ExcludeAudienceOverlapsField = value;
                    this.RaisePropertyChanged("ExcludeAudienceOverlaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool ExcludePrimaryAudienceOverlaps {
            get {
                return this.ExcludePrimaryAudienceOverlapsField;
            }
            set {
                if ((this.ExcludePrimaryAudienceOverlapsField.Equals(value) != true)) {
                    this.ExcludePrimaryAudienceOverlapsField = value;
                    this.RaisePropertyChanged("ExcludePrimaryAudienceOverlaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.VehicleFieldType[] GroupByFields {
            get {
                return this.GroupByFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupByFieldsField, value) != true)) {
                    this.GroupByFieldsField = value;
                    this.RaisePropertyChanged("GroupByFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int LCID {
            get {
                return this.LCIDField;
            }
            set {
                if ((this.LCIDField.Equals(value) != true)) {
                    this.LCIDField = value;
                    this.RaisePropertyChanged("LCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] Markets {
            get {
                return this.MarketsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketsField, value) != true)) {
                    this.MarketsField = value;
                    this.RaisePropertyChanged("Markets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.PlanningArguments PlanningArguments {
            get {
                return this.PlanningArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanningArgumentsField, value) != true)) {
                    this.PlanningArgumentsField = value;
                    this.RaisePropertyChanged("PlanningArguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.ProgramArguments ProgramArguments {
            get {
                return this.ProgramArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramArgumentsField, value) != true)) {
                    this.ProgramArgumentsField = value;
                    this.RaisePropertyChanged("ProgramArguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.StatType[] RequestedCumulativeStats {
            get {
                return this.RequestedCumulativeStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedCumulativeStatsField, value) != true)) {
                    this.RequestedCumulativeStatsField = value;
                    this.RaisePropertyChanged("RequestedCumulativeStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.StatType[] RequestedStats {
            get {
                return this.RequestedStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedStatsField, value) != true)) {
                    this.RequestedStatsField = value;
                    this.RaisePropertyChanged("RequestedStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.SharePercentArguments SharePercentArguments {
            get {
                return this.SharePercentArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SharePercentArgumentsField, value) != true)) {
                    this.SharePercentArgumentsField = value;
                    this.RaisePropertyChanged("SharePercentArguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] Stations {
            get {
                return this.StationsField;
            }
            set {
                if ((object.ReferenceEquals(this.StationsField, value) != true)) {
                    this.StationsField = value;
                    this.RaisePropertyChanged("Stations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.ReportType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DaypartArguments", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DaypartArguments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private QvNLogicConnector.NLogic.TimeType TimeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.TimeType TimeType {
            get {
                return this.TimeTypeField;
            }
            set {
                if ((this.TimeTypeField.Equals(value) != true)) {
                    this.TimeTypeField = value;
                    this.RaisePropertyChanged("TimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlanningArguments", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class PlanningArguments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinimumReachViewsField;
        
        private double[][] TargetGRPsPerStationPerDaypartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinimumReachViews {
            get {
                return this.MinimumReachViewsField;
            }
            set {
                if ((this.MinimumReachViewsField.Equals(value) != true)) {
                    this.MinimumReachViewsField = value;
                    this.RaisePropertyChanged("MinimumReachViews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double[][] TargetGRPsPerStationPerDaypart {
            get {
                return this.TargetGRPsPerStationPerDaypartField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetGRPsPerStationPerDaypartField, value) != true)) {
                    this.TargetGRPsPerStationPerDaypartField = value;
                    this.RaisePropertyChanged("TargetGRPsPerStationPerDaypart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramArguments", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class ProgramArguments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinimumAiringsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProgramCodeExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProgramCodeIncludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProgramNameExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProgramNameIncludeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumAirings {
            get {
                return this.MinimumAiringsField;
            }
            set {
                if ((this.MinimumAiringsField.Equals(value) != true)) {
                    this.MinimumAiringsField = value;
                    this.RaisePropertyChanged("MinimumAirings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProgramCodeExclude {
            get {
                return this.ProgramCodeExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramCodeExcludeField, value) != true)) {
                    this.ProgramCodeExcludeField = value;
                    this.RaisePropertyChanged("ProgramCodeExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProgramCodeInclude {
            get {
                return this.ProgramCodeIncludeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramCodeIncludeField, value) != true)) {
                    this.ProgramCodeIncludeField = value;
                    this.RaisePropertyChanged("ProgramCodeInclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ProgramNameExclude {
            get {
                return this.ProgramNameExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameExcludeField, value) != true)) {
                    this.ProgramNameExcludeField = value;
                    this.RaisePropertyChanged("ProgramNameExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ProgramNameInclude {
            get {
                return this.ProgramNameIncludeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameIncludeField, value) != true)) {
                    this.ProgramNameIncludeField = value;
                    this.RaisePropertyChanged("ProgramNameInclude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharePercentArguments", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class SharePercentArguments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] StationsDenominatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StationsDenominator {
            get {
                return this.StationsDenominatorField;
            }
            set {
                if ((object.ReferenceEquals(this.StationsDenominatorField, value) != true)) {
                    this.StationsDenominatorField = value;
                    this.RaisePropertyChanged("StationsDenominator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Audience", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class Audience : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AgeRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.DemographicAttributeValues[] AttributeValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AgeRange {
            get {
                return this.AgeRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeRangeField, value) != true)) {
                    this.AgeRangeField = value;
                    this.RaisePropertyChanged("AgeRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.DemographicAttributeValues[] AttributeValues {
            get {
                return this.AttributeValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeValuesField, value) != true)) {
                    this.AttributeValuesField = value;
                    this.RaisePropertyChanged("AttributeValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Daypart", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class Daypart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private QvNLogicConnector.NLogic.DaypartComponent[] ComponentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.DaypartComponent[] Components {
            get {
                return this.ComponentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentsField, value) != true)) {
                    this.ComponentsField = value;
                    this.RaisePropertyChanged("Components");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleFieldType", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum VehicleFieldType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StationName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StationCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndTime = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EpisodeTitle = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekdays = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duration = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumAired = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DaypartLabel = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatType", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum StatType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AMA = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rating = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumulativeReach = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharePercent = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatedReachPercent = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatedAverageFrequency = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatedImpressions = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumulativeReachPercent = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeeklyReach = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeeklyReachPercent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyReach = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyReachPercent = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportType", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum ReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Program = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Daypart = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DemographicAttributeValues", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DemographicAttributeValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeType", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum TimeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Local = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Station = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EST = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DaypartComponent", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DaypartComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int[] DaysOfWeekField;
        
        private int FromHourField;
        
        private int FromMinuteField;
        
        private int ToHourField;
        
        private int ToMinuteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] DaysOfWeek {
            get {
                return this.DaysOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysOfWeekField, value) != true)) {
                    this.DaysOfWeekField = value;
                    this.RaisePropertyChanged("DaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int FromHour {
            get {
                return this.FromHourField;
            }
            set {
                if ((this.FromHourField.Equals(value) != true)) {
                    this.FromHourField = value;
                    this.RaisePropertyChanged("FromHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int FromMinute {
            get {
                return this.FromMinuteField;
            }
            set {
                if ((this.FromMinuteField.Equals(value) != true)) {
                    this.FromMinuteField = value;
                    this.RaisePropertyChanged("FromMinute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ToHour {
            get {
                return this.ToHourField;
            }
            set {
                if ((this.ToHourField.Equals(value) != true)) {
                    this.ToHourField = value;
                    this.RaisePropertyChanged("ToHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ToMinute {
            get {
                return this.ToMinuteField;
            }
            set {
                if ((this.ToMinuteField.Equals(value) != true)) {
                    this.ToMinuteField = value;
                    this.RaisePropertyChanged("ToMinute");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportResponse", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class ReportResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private QvNLogicConnector.NLogic.AudienceInformation[] AudienceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.ResultValues[] CumulativeStatsPerAudienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.ValidationErrorCode ErrorCodeField;
        
        private QvNLogicConnector.NLogic.Market[] MarketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.ResultRecord[] ResultsField;
        
        private QvNLogicConnector.NLogic.ResultStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.AudienceInformation[] AudienceInformation {
            get {
                return this.AudienceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AudienceInformationField, value) != true)) {
                    this.AudienceInformationField = value;
                    this.RaisePropertyChanged("AudienceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public QvNLogicConnector.NLogic.ResultValues[] CumulativeStatsPerAudience {
            get {
                return this.CumulativeStatsPerAudienceField;
            }
            set {
                if ((object.ReferenceEquals(this.CumulativeStatsPerAudienceField, value) != true)) {
                    this.CumulativeStatsPerAudienceField = value;
                    this.RaisePropertyChanged("CumulativeStatsPerAudience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.ValidationErrorCode ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.Market[] Markets {
            get {
                return this.MarketsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketsField, value) != true)) {
                    this.MarketsField = value;
                    this.RaisePropertyChanged("Markets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.ResultRecord[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public QvNLogicConnector.NLogic.ResultStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AudienceInformation", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class AudienceInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.UniverseAndSample[] MetricsPerMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverlapsPreviousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverlapsPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubsetOfPreviousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubsetOfPrimaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.UniverseAndSample[] MetricsPerMarket {
            get {
                return this.MetricsPerMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricsPerMarketField, value) != true)) {
                    this.MetricsPerMarketField = value;
                    this.RaisePropertyChanged("MetricsPerMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverlapsPrevious {
            get {
                return this.OverlapsPreviousField;
            }
            set {
                if ((this.OverlapsPreviousField.Equals(value) != true)) {
                    this.OverlapsPreviousField = value;
                    this.RaisePropertyChanged("OverlapsPrevious");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverlapsPrimary {
            get {
                return this.OverlapsPrimaryField;
            }
            set {
                if ((this.OverlapsPrimaryField.Equals(value) != true)) {
                    this.OverlapsPrimaryField = value;
                    this.RaisePropertyChanged("OverlapsPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubsetOfPrevious {
            get {
                return this.SubsetOfPreviousField;
            }
            set {
                if ((this.SubsetOfPreviousField.Equals(value) != true)) {
                    this.SubsetOfPreviousField = value;
                    this.RaisePropertyChanged("SubsetOfPrevious");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubsetOfPrimary {
            get {
                return this.SubsetOfPrimaryField;
            }
            set {
                if ((this.SubsetOfPrimaryField.Equals(value) != true)) {
                    this.SubsetOfPrimaryField = value;
                    this.RaisePropertyChanged("SubsetOfPrimary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultValues", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class ResultValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.Stats[] PerMarketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.Stats[] PerMarket {
            get {
                return this.PerMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.PerMarketField, value) != true)) {
                    this.PerMarketField = value;
                    this.RaisePropertyChanged("PerMarket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationErrorCode", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum ValidationErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateRangeListEmpty = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateRangeStartAfterEnd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetworkListEmpty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetworkListUnknownCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayPartListEmpty = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayPartInvalid = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketListEmpty = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketListTooLong = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanningSelectionInvalid = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnsupportedStatsField = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharePercentSelectionInvalid = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unauthorized = 1073741824,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Market", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class Market : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private bool IsUserSelectableField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsUserSelectable {
            get {
                return this.IsUserSelectableField;
            }
            set {
                if ((this.IsUserSelectableField.Equals(value) != true)) {
                    this.IsUserSelectableField = value;
                    this.RaisePropertyChanged("IsUserSelectable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultRecord", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class ResultRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaypartLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EpisodeAirDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EpisodeTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstAirDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAirDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumAiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProgramCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.ResultValues[] StatsPerAudienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeekdaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DaypartLabel {
            get {
                return this.DaypartLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.DaypartLabelField, value) != true)) {
                    this.DaypartLabelField = value;
                    this.RaisePropertyChanged("DaypartLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeField, value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<System.DateTime> EpisodeAirDate {
            get {
                return this.EpisodeAirDateField;
            }
            set {
                if ((this.EpisodeAirDateField.Equals(value) != true)) {
                    this.EpisodeAirDateField = value;
                    this.RaisePropertyChanged("EpisodeAirDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EpisodeTitle {
            get {
                return this.EpisodeTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.EpisodeTitleField, value) != true)) {
                    this.EpisodeTitleField = value;
                    this.RaisePropertyChanged("EpisodeTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<System.DateTime> FirstAirDate {
            get {
                return this.FirstAirDateField;
            }
            set {
                if ((this.FirstAirDateField.Equals(value) != true)) {
                    this.FirstAirDateField = value;
                    this.RaisePropertyChanged("FirstAirDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<System.DateTime> LastAirDate {
            get {
                return this.LastAirDateField;
            }
            set {
                if ((this.LastAirDateField.Equals(value) != true)) {
                    this.LastAirDateField = value;
                    this.RaisePropertyChanged("LastAirDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> NumAired {
            get {
                return this.NumAiredField;
            }
            set {
                if ((this.NumAiredField.Equals(value) != true)) {
                    this.NumAiredField = value;
                    this.RaisePropertyChanged("NumAired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> ProgramCode {
            get {
                return this.ProgramCodeField;
            }
            set {
                if ((this.ProgramCodeField.Equals(value) != true)) {
                    this.ProgramCodeField = value;
                    this.RaisePropertyChanged("ProgramCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((this.StationCodeField.Equals(value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StationName {
            get {
                return this.StationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNameField, value) != true)) {
                    this.StationNameField = value;
                    this.RaisePropertyChanged("StationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.ResultValues[] StatsPerAudience {
            get {
                return this.StatsPerAudienceField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsPerAudienceField, value) != true)) {
                    this.StatsPerAudienceField = value;
                    this.RaisePropertyChanged("StatsPerAudience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Weekdays {
            get {
                return this.WeekdaysField;
            }
            set {
                if ((object.ReferenceEquals(this.WeekdaysField, value) != true)) {
                    this.WeekdaysField = value;
                    this.RaisePropertyChanged("Weekdays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultStatus", Namespace="http://schemas.datacontract.org/2004/07/NLogic.Analytics.Contracts.V2")]
    public enum ResultStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UniverseAndSample", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class UniverseAndSample : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UniverseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sample {
            get {
                return this.SampleField;
            }
            set {
                if ((this.SampleField.Equals(value) != true)) {
                    this.SampleField = value;
                    this.RaisePropertyChanged("Sample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Universe {
            get {
                return this.UniverseField;
            }
            set {
                if ((this.UniverseField.Equals(value) != true)) {
                    this.UniverseField = value;
                    this.RaisePropertyChanged("Universe");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stats", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class Stats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AMAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CumulativeReachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CumulativeReachPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DailyReachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DailyReachPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EstimatedAverageFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EstimatedImpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EstimatedReachPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SharePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeeklyReachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeeklyReachPercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> AMA {
            get {
                return this.AMAField;
            }
            set {
                if ((this.AMAField.Equals(value) != true)) {
                    this.AMAField = value;
                    this.RaisePropertyChanged("AMA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> CumulativeReach {
            get {
                return this.CumulativeReachField;
            }
            set {
                if ((this.CumulativeReachField.Equals(value) != true)) {
                    this.CumulativeReachField = value;
                    this.RaisePropertyChanged("CumulativeReach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> CumulativeReachPercent {
            get {
                return this.CumulativeReachPercentField;
            }
            set {
                if ((this.CumulativeReachPercentField.Equals(value) != true)) {
                    this.CumulativeReachPercentField = value;
                    this.RaisePropertyChanged("CumulativeReachPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> DailyReach {
            get {
                return this.DailyReachField;
            }
            set {
                if ((this.DailyReachField.Equals(value) != true)) {
                    this.DailyReachField = value;
                    this.RaisePropertyChanged("DailyReach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> DailyReachPercent {
            get {
                return this.DailyReachPercentField;
            }
            set {
                if ((this.DailyReachPercentField.Equals(value) != true)) {
                    this.DailyReachPercentField = value;
                    this.RaisePropertyChanged("DailyReachPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> EstimatedAverageFrequency {
            get {
                return this.EstimatedAverageFrequencyField;
            }
            set {
                if ((this.EstimatedAverageFrequencyField.Equals(value) != true)) {
                    this.EstimatedAverageFrequencyField = value;
                    this.RaisePropertyChanged("EstimatedAverageFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> EstimatedImpressions {
            get {
                return this.EstimatedImpressionsField;
            }
            set {
                if ((this.EstimatedImpressionsField.Equals(value) != true)) {
                    this.EstimatedImpressionsField = value;
                    this.RaisePropertyChanged("EstimatedImpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> EstimatedReachPercent {
            get {
                return this.EstimatedReachPercentField;
            }
            set {
                if ((this.EstimatedReachPercentField.Equals(value) != true)) {
                    this.EstimatedReachPercentField = value;
                    this.RaisePropertyChanged("EstimatedReachPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> SharePercent {
            get {
                return this.SharePercentField;
            }
            set {
                if ((this.SharePercentField.Equals(value) != true)) {
                    this.SharePercentField = value;
                    this.RaisePropertyChanged("SharePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> WeeklyReach {
            get {
                return this.WeeklyReachField;
            }
            set {
                if ((this.WeeklyReachField.Equals(value) != true)) {
                    this.WeeklyReachField = value;
                    this.RaisePropertyChanged("WeeklyReach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<double> WeeklyReachPercent {
            get {
                return this.WeeklyReachPercentField;
            }
            set {
                if ((this.WeeklyReachPercentField.Equals(value) != true)) {
                    this.WeeklyReachPercentField = value;
                    this.RaisePropertyChanged("WeeklyReachPercent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DemographicCategory", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DemographicCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QvNLogicConnector.NLogic.DemographicAttribute[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QvNLogicConnector.NLogic.DemographicAttribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DemographicAttribute", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class DemographicAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool HasProgramSchedulesField;
        
        private int IdField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasProgramSchedules {
            get {
                return this.HasProgramSchedulesField;
            }
            set {
                if ((this.HasProgramSchedulesField.Equals(value) != true)) {
                    this.HasProgramSchedulesField = value;
                    this.RaisePropertyChanged("HasProgramSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationToMarket", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class StationToMarket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int MarketIdField;
        
        private int StationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MarketId {
            get {
                return this.MarketIdField;
            }
            set {
                if ((this.MarketIdField.Equals(value) != true)) {
                    this.MarketIdField = value;
                    this.RaisePropertyChanged("MarketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StationId {
            get {
                return this.StationIdField;
            }
            set {
                if ((this.StationIdField.Equals(value) != true)) {
                    this.StationIdField = value;
                    this.RaisePropertyChanged("StationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationGroup", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class StationGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationGroupCategory", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class StationGroupCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationGroupToCategory", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class StationGroupToCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CategoryIdField;
        
        private int GroupIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationGroupToStation", Namespace="http://nlogic.ca/analyticsService/2.0")]
    [System.SerializableAttribute()]
    public partial class StationGroupToStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int GroupIdField;
        
        private int StationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StationId {
            get {
                return this.StationIdField;
            }
            set {
                if ((this.StationIdField.Equals(value) != true)) {
                    this.StationIdField = value;
                    this.RaisePropertyChanged("StationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nlogic.ca/analyticsService/2.0", ConfigurationName="NLogic.IAnalyticsService")]
    public interface IAnalyticsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IAnalyticsService/GetReport", ReplyAction="http://nlogic.ca/analyticsService/2.0/IAnalyticsService/GetReportResponse")]
        QvNLogicConnector.NLogic.ReportResponse GetReport(QvNLogicConnector.NLogic.ReportRequest arguments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IAnalyticsService/GetReport", ReplyAction="http://nlogic.ca/analyticsService/2.0/IAnalyticsService/GetReportResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.ReportResponse> GetReportAsync(QvNLogicConnector.NLogic.ReportRequest arguments);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnalyticsServiceChannel : QvNLogicConnector.NLogic.IAnalyticsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnalyticsServiceClient : System.ServiceModel.ClientBase<QvNLogicConnector.NLogic.IAnalyticsService>, QvNLogicConnector.NLogic.IAnalyticsService {
        
        public AnalyticsServiceClient() {
        }
        
        public AnalyticsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnalyticsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QvNLogicConnector.NLogic.ReportResponse GetReport(QvNLogicConnector.NLogic.ReportRequest arguments) {
            return base.Channel.GetReport(arguments);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.ReportResponse> GetReportAsync(QvNLogicConnector.NLogic.ReportRequest arguments) {
            return base.Channel.GetReportAsync(arguments);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nlogic.ca/analyticsService/2.0", ConfigurationName="NLogic.IReferenceDataService")]
    public interface IReferenceDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxAvailableDat" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxAvailableDat" +
            "esResponse")]
        QvNLogicConnector.NLogic.DateRange GetMinMaxAvailableDates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxAvailableDat" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxAvailableDat" +
            "esResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxAvailableDatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxLoadedDates", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxLoadedDatesR" +
            "esponse")]
        QvNLogicConnector.NLogic.DateRange GetMinMaxLoadedDates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxLoadedDates", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxLoadedDatesR" +
            "esponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxLoadedDatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxConfirmedDat" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxConfirmedDat" +
            "esResponse")]
        QvNLogicConnector.NLogic.DateRange GetMinMaxConfirmedDates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxConfirmedDat" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMinMaxConfirmedDat" +
            "esResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxConfirmedDatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedAudience" +
            "s", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedAudience" +
            "sResponse")]
        QvNLogicConnector.NLogic.Audience[] GetPredefinedAudiences(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedAudience" +
            "s", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedAudience" +
            "sResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Audience[]> GetPredefinedAudiencesAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMarkets", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMarketsResponse")]
        QvNLogicConnector.NLogic.Market[] GetMarkets(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMarkets", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetMarketsResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Market[]> GetMarketsAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetFullCoverageMarket" +
            "s", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetFullCoverageMarket" +
            "sResponse")]
        QvNLogicConnector.NLogic.Market[] GetFullCoverageMarkets(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetFullCoverageMarket" +
            "s", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetFullCoverageMarket" +
            "sResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Market[]> GetFullCoverageMarketsAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDateRang" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDateRang" +
            "esResponse")]
        QvNLogicConnector.NLogic.DateRange[] GetPredefinedDateRanges(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDateRang" +
            "es", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDateRang" +
            "esResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange[]> GetPredefinedDateRangesAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDayparts" +
            "", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDayparts" +
            "Response")]
        QvNLogicConnector.NLogic.Daypart[] GetPredefinedDayparts(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDayparts" +
            "", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetPredefinedDayparts" +
            "Response")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Daypart[]> GetPredefinedDaypartsAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetDemographics", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetDemographicsRespon" +
            "se")]
        QvNLogicConnector.NLogic.DemographicCategory[] GetDemographics(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetDemographics", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetDemographicsRespon" +
            "se")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DemographicCategory[]> GetDemographicsAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetAudienceCompositio" +
            "nAudiences", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetAudienceCompositio" +
            "nAudiencesResponse")]
        QvNLogicConnector.NLogic.Audience[] GetAudienceCompositionAudiences(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetAudienceCompositio" +
            "nAudiences", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetAudienceCompositio" +
            "nAudiencesResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Audience[]> GetAudienceCompositionAudiencesAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStations", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsResponse")]
        QvNLogicConnector.NLogic.Station[] GetStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStations", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Station[]> GetStationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsToMarkets", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsToMarketsR" +
            "esponse")]
        QvNLogicConnector.NLogic.StationToMarket[] GetStationsToMarkets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsToMarkets", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationsToMarketsR" +
            "esponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationToMarket[]> GetStationsToMarketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroups", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsRespo" +
            "nse")]
        QvNLogicConnector.NLogic.StationGroup[] GetStationGroups(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroups", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsRespo" +
            "nse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroup[]> GetStationGroupsAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupCatego" +
            "ries", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupCatego" +
            "riesResponse")]
        QvNLogicConnector.NLogic.StationGroupCategory[] GetStationGroupCategories(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupCatego" +
            "ries", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupCatego" +
            "riesResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupCategory[]> GetStationGroupCategoriesAsync(int LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToCat" +
            "egories", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToCat" +
            "egoriesResponse")]
        QvNLogicConnector.NLogic.StationGroupToCategory[] GetStationGroupsToCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToCat" +
            "egories", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToCat" +
            "egoriesResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupToCategory[]> GetStationGroupsToCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToSta" +
            "tions", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToSta" +
            "tionsResponse")]
        QvNLogicConnector.NLogic.StationGroupToStation[] GetStationGroupsToStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToSta" +
            "tions", ReplyAction="http://nlogic.ca/analyticsService/2.0/IReferenceDataService/GetStationGroupsToSta" +
            "tionsResponse")]
        System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupToStation[]> GetStationGroupsToStationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReferenceDataServiceChannel : QvNLogicConnector.NLogic.IReferenceDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReferenceDataServiceClient : System.ServiceModel.ClientBase<QvNLogicConnector.NLogic.IReferenceDataService>, QvNLogicConnector.NLogic.IReferenceDataService {
        
        public ReferenceDataServiceClient() {
        }
        
        public ReferenceDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReferenceDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReferenceDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReferenceDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QvNLogicConnector.NLogic.DateRange GetMinMaxAvailableDates() {
            return base.Channel.GetMinMaxAvailableDates();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxAvailableDatesAsync() {
            return base.Channel.GetMinMaxAvailableDatesAsync();
        }
        
        public QvNLogicConnector.NLogic.DateRange GetMinMaxLoadedDates() {
            return base.Channel.GetMinMaxLoadedDates();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxLoadedDatesAsync() {
            return base.Channel.GetMinMaxLoadedDatesAsync();
        }
        
        public QvNLogicConnector.NLogic.DateRange GetMinMaxConfirmedDates() {
            return base.Channel.GetMinMaxConfirmedDates();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange> GetMinMaxConfirmedDatesAsync() {
            return base.Channel.GetMinMaxConfirmedDatesAsync();
        }
        
        public QvNLogicConnector.NLogic.Audience[] GetPredefinedAudiences(int LCID) {
            return base.Channel.GetPredefinedAudiences(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Audience[]> GetPredefinedAudiencesAsync(int LCID) {
            return base.Channel.GetPredefinedAudiencesAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.Market[] GetMarkets(int LCID) {
            return base.Channel.GetMarkets(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Market[]> GetMarketsAsync(int LCID) {
            return base.Channel.GetMarketsAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.Market[] GetFullCoverageMarkets(int LCID) {
            return base.Channel.GetFullCoverageMarkets(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Market[]> GetFullCoverageMarketsAsync(int LCID) {
            return base.Channel.GetFullCoverageMarketsAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.DateRange[] GetPredefinedDateRanges(int LCID) {
            return base.Channel.GetPredefinedDateRanges(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DateRange[]> GetPredefinedDateRangesAsync(int LCID) {
            return base.Channel.GetPredefinedDateRangesAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.Daypart[] GetPredefinedDayparts(int LCID) {
            return base.Channel.GetPredefinedDayparts(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Daypart[]> GetPredefinedDaypartsAsync(int LCID) {
            return base.Channel.GetPredefinedDaypartsAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.DemographicCategory[] GetDemographics(int LCID) {
            return base.Channel.GetDemographics(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.DemographicCategory[]> GetDemographicsAsync(int LCID) {
            return base.Channel.GetDemographicsAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.Audience[] GetAudienceCompositionAudiences(int LCID) {
            return base.Channel.GetAudienceCompositionAudiences(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Audience[]> GetAudienceCompositionAudiencesAsync(int LCID) {
            return base.Channel.GetAudienceCompositionAudiencesAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.Station[] GetStations() {
            return base.Channel.GetStations();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.Station[]> GetStationsAsync() {
            return base.Channel.GetStationsAsync();
        }
        
        public QvNLogicConnector.NLogic.StationToMarket[] GetStationsToMarkets() {
            return base.Channel.GetStationsToMarkets();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationToMarket[]> GetStationsToMarketsAsync() {
            return base.Channel.GetStationsToMarketsAsync();
        }
        
        public QvNLogicConnector.NLogic.StationGroup[] GetStationGroups(int LCID) {
            return base.Channel.GetStationGroups(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroup[]> GetStationGroupsAsync(int LCID) {
            return base.Channel.GetStationGroupsAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.StationGroupCategory[] GetStationGroupCategories(int LCID) {
            return base.Channel.GetStationGroupCategories(LCID);
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupCategory[]> GetStationGroupCategoriesAsync(int LCID) {
            return base.Channel.GetStationGroupCategoriesAsync(LCID);
        }
        
        public QvNLogicConnector.NLogic.StationGroupToCategory[] GetStationGroupsToCategories() {
            return base.Channel.GetStationGroupsToCategories();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupToCategory[]> GetStationGroupsToCategoriesAsync() {
            return base.Channel.GetStationGroupsToCategoriesAsync();
        }
        
        public QvNLogicConnector.NLogic.StationGroupToStation[] GetStationGroupsToStations() {
            return base.Channel.GetStationGroupsToStations();
        }
        
        public System.Threading.Tasks.Task<QvNLogicConnector.NLogic.StationGroupToStation[]> GetStationGroupsToStationsAsync() {
            return base.Channel.GetStationGroupsToStationsAsync();
        }
    }
}
